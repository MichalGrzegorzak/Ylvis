// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Aegon.Test.Common.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("GoogleAnalytics")]
    public partial class GoogleAnalyticsFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "GoogleAnalytics.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "GoogleAnalytics", "Tests if the GoogleAnalytics page views and events are being tracked", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Should track following a link as page view")]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/download-jpeg", "TestCaseData/ga/download_jpeg.html", "click-me", "/downloads/Aegon-logo.jpg", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/download-zip", "TestCaseData/ga/download_zip.html", "click-me", "/downloads/dummy.zip", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/external-link", "TestCaseData/ga/external_link.html", "click-me", "/outgoing/external resource [http://google.com]", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/external-link-title", "TestCaseData/ga/external_link_title.html", "click-me", "/outgoing/external resource, My external link [http://google.com]", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/mailto", "TestCaseData/ga/mailto.html", "click-me", "/mailto/test@test.com", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/download-jpeg", "TestCaseData/ga/download_jpeg.html", "click-me", "/downloads/Aegon-logo.jpg", "0", "not", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/download-zip", "TestCaseData/ga/download_zip.html", "click-me", "/downloads/dummy.zip", "0", "not", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/external-link", "TestCaseData/ga/external_link.html", "click-me", "/outgoing/external resource [http://google.com]", "0", "not", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/external-link-title", "TestCaseData/ga/external_link_title.html", "click-me", "/outgoing/external resource, My external link [http://google.com]", "0", "not", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/mailto", "TestCaseData/ga/mailto.html", "click-me", "/mailto/test@test.com", "0", "not", null)]
        public virtual void ShouldTrackFollowingALinkAsPageView(string site, string homepage, string page, string file, string link_Id, string text, string cookie_Level, string not, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should track following a link as page view", exampleTags);
#line 4
this.ScenarioSetup(scenarioInfo);
#line 5
 testRunner.Given(string.Format("On {0} site I have prepared {1} test page with content from {2} file", site, page, file), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 6
    testRunner.And(string.Format("Cookie consent is enabled and configured for {0}", homepage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 7
 testRunner.When("I go to that page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 8
    testRunner.And("I mock GoogleAnalytics", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 9
    testRunner.And(string.Format("I set {0} Cookie Consent level", cookie_Level), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 10
    testRunner.And(string.Format("I terminate the click event of {0}", link_Id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 11
    testRunner.And(string.Format("I click link by {0} id", link_Id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 12
 testRunner.Then(string.Format("the page view should {0} be tracked as {1}", not, text), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Should track following a link as event")]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/download-jpeg-event", "TestCaseData/ga/download_jpeg_event.html", "click-me", "default", "downloads", "Aegon-logo.jpg", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/download-zip-event", "TestCaseData/ga/download_zip_event.html", "click-me", "default", "downloads", "dummy.zip", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/external-link-event", "TestCaseData/ga/external_link_event.html", "click-me", "default", "outgoing", "external resource [http://google.com]", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/external-link-event-title", "TestCaseData/ga/external_link_event_title.html", "click-me", "default", "outgoing", "external resource, My external link [http://google.com]", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/mailto-event", "TestCaseData/ga/mailto_event.html", "click-me", "default", "mailto", "test@test.com", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/download-jpeg-event", "TestCaseData/ga/download_jpeg_event.html", "click-me", "default", "downloads", "Aegon-logo.jpg", "0", "not", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/download-zip-event", "TestCaseData/ga/download_zip_event.html", "click-me", "default", "downloads", "dummy.zip", "0", "not", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/external-link-event", "TestCaseData/ga/external_link_event.html", "click-me", "default", "outgoing", "external resource [http://google.com]", "0", "not", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/external-link-event-title", "TestCaseData/ga/external_link_event_title.html", "click-me", "default", "outgoing", "external resource, My external link [http://google.com]", "0", "not", null)]
        [NUnit.Framework.TestCaseAttribute("SANDBOX", "/en/dev-sandbox/BRI-Homepage/", "/ga/mailto-event", "TestCaseData/ga/mailto_event.html", "click-me", "default", "mailto", "test@test.com", "0", "not", null)]
        public virtual void ShouldTrackFollowingALinkAsEvent(string site, string homepage, string page, string file, string link_Id, string area, string action, string id, string cookie_Level, string not, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should track following a link as event", exampleTags);
#line 26
this.ScenarioSetup(scenarioInfo);
#line 27
 testRunner.Given(string.Format("On {0} site I have prepared {1} test page with content from {2} file", site, page, file), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 28
    testRunner.And(string.Format("Cookie consent is enabled and configured for {0}", homepage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 29
 testRunner.When("I go to that page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 30
    testRunner.And("I mock GoogleAnalytics", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 31
    testRunner.And(string.Format("I set {0} Cookie Consent level", cookie_Level), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 32
    testRunner.And(string.Format("I terminate the click event of {0}", link_Id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 33
    testRunner.And(string.Format("I click link by {0} id", link_Id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 34
 testRunner.Then(string.Format("the event should {0} be tracked as {1} and {2} and {3}", not, area, action, id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Should track downloading an image from gallery")]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/Home/Investors/News-presentations/Image-Gallery/Executive-Board/", "a.aeg-downloadLink", "ctl00_MainContentPlaceHolder_GalleryContainer_ctl00_ImageItemsGrid_RowsRepeater_c" +
            "tl00_ctl00_ImageGalleryItem_DownloadLargeLink", "1000", "ImageGallery", "DownloadImage", "Alex Wynaendts|26099|Large", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/Home/Investors/News-presentations/Image-Gallery/Executive-Board/", "a.aeg-downloadLink", "ctl00_MainContentPlaceHolder_GalleryContainer_ctl00_ImageItemsGrid_RowsRepeater_c" +
            "tl00_ctl00_ImageGalleryItem_DownloadSmallLink", "1000", "ImageGallery", "DownloadImage", "Alex Wynaendts|26099|Small", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/Home/Investors/News-presentations/Image-Gallery/Executive-Board/", "a.aeg-downloadLink", "ctl00_MainContentPlaceHolder_GalleryContainer_ctl00_ImageItemsGrid_RowsRepeater_c" +
            "tl00_ctl00_ImageGalleryItem_DownloadLargeLink", "1000", "ImageGallery", "DownloadImage", "Alex Wynaendts|26099|Large", "0", "not", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/Home/Investors/News-presentations/Image-Gallery/Executive-Board/", "a.aeg-downloadLink", "ctl00_MainContentPlaceHolder_GalleryContainer_ctl00_ImageItemsGrid_RowsRepeater_c" +
            "tl00_ctl00_ImageGalleryItem_DownloadSmallLink", "1000", "ImageGallery", "DownloadImage", "Alex Wynaendts|26099|Small", "0", "not", null)]
        public virtual void ShouldTrackDownloadingAnImageFromGallery(string site, string page, string expand_Selector, string link_Id, string time, string area, string action, string id, string cookie_Level, string not, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should track downloading an image from gallery", exampleTags);
#line 48
this.ScenarioSetup(scenarioInfo);
#line 49
 testRunner.Given(string.Format("I am on the {0} site", site), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 50
 testRunner.When(string.Format("I go to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 51
    testRunner.And("I mock GoogleAnalytics", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 52
    testRunner.And(string.Format("I set {0} Cookie Consent level", cookie_Level), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 53
    testRunner.And(string.Format("I click link by {0} selector", expand_Selector), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 54
    testRunner.And(string.Format("I wait {0} milliseconds", time), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 55
    testRunner.And(string.Format("I terminate the click event of {0}", link_Id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 56
    testRunner.And(string.Format("I click link by {0} id", link_Id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 57
 testRunner.Then(string.Format("the event should {0} be tracked as {1} and {2} and {3}", not, area, action, id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Should track searching by URL event")]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/Home/---/Search-Results/?q=searchTermTest&s=0", "aeg-page-search-btn", "BRI Search", "search", "searchTermTest", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/Home/---/Search-Results/?q=searchTermTest&s=0", "aeg-page-search-btn", "BRI Search", "search", "searchTermTest", "0", "not", null)]
        public virtual void ShouldTrackSearchingByURLEvent(string site, string page, string link_Id, string area, string action, string id, string cookie_Level, string not, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should track searching by URL event", exampleTags);
#line 66
this.ScenarioSetup(scenarioInfo);
#line 67
    testRunner.Given(string.Format("I am on the {0} site", site), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 68
    testRunner.When(string.Format("I go to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 69
    testRunner.And("I mock GoogleAnalytics", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 70
    testRunner.And(string.Format("I set {0} Cookie Consent level", cookie_Level), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 71
    testRunner.Then(string.Format("the event should {0} be tracked as {1} and {2} and {3}", not, area, action, id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Should track searching event")]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/Home/---/Search-Results/", "ctl00_MainContentPlaceHolder_SearchTextBox", "aeg-page-search-btn", "BRI Search", "search", "searchTermTest", "4", "", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/Home/---/Search-Results/", "ctl00_MainContentPlaceHolder_SearchTextBox", "aeg-page-search-btn", "BRI Search", "search", "searchTermTest", "0", "not", null)]
        public virtual void ShouldTrackSearchingEvent(string site, string page, string search_Field_Id, string link_Id, string area, string action, string id, string cookie_Level, string not, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Should track searching event", exampleTags);
#line 77
this.ScenarioSetup(scenarioInfo);
#line 78
    testRunner.Given(string.Format("I am on the {0} site", site), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 79
    testRunner.When(string.Format("I go to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 80
    testRunner.And("I mock GoogleAnalytics", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 81
    testRunner.And(string.Format("I set {0} Cookie Consent level", cookie_Level), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 82
    testRunner.And(string.Format("I enter {0} into {1}", id, search_Field_Id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 83
    testRunner.And(string.Format("I click link by {0} id", link_Id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line 84
    testRunner.Then(string.Format("the event should {0} be tracked as {1} and {2} and {3}", not, area, action, id), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
