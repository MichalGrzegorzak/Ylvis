// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:1.9.0.77
//      SpecFlow Generator Version:1.9.0.0
//      Runtime Version:4.0.30319.34014
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Aegon.Test.Common.Features
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "1.9.0.77")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Microdata tagging")]
    public partial class MicrodataTaggingFeature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "MicrodataTagging.feature"
#line hidden
        
        [NUnit.Framework.TestFixtureSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Microdata tagging", "  Checks whether the microdata has been correctly applied to BRI templates\r\nAs de" +
                    "scribed here: http://schema.org/WebPage\r\n  Currently only body and breadcrumbs a" +
                    "re supported", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.TestFixtureTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check BRI microdata tags")]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/en/Home/About/", "Home", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/en/Home/Products/", "Home", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/en/Home/Research/", "Home", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/en/Home/About/At-a-glance/", "Home;About", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/en/Home/About/Performance/", "Home;About", null)]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/en/Home/About/Performance/Performance-Update/", "Home;About;Performance", null)]
        public virtual void CheckBRIMicrodataTags(string site, string page, string breadcrumbs, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check BRI microdata tags", exampleTags);
#line 6
this.ScenarioSetup(scenarioInfo);
#line 7
 testRunner.Given(string.Format("I am on the {0} site", site), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 8
    testRunner.When(string.Format("I go to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 9
 testRunner.Then("The body microdata tag is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 10
    testRunner.And(string.Format("The {0} BRI microdata tags are present", breadcrumbs), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("Check non-BRI microdata tag")]
        [NUnit.Framework.TestCaseAttribute("AEGON", "/en/Home/Investors/Shareholders--AGM/Annual-General-Meeting/AGM-Archive/", "Home;Investors & Media;Shareholders & AGM;Annual General Meeting", null)]
        [NUnit.Framework.TestCaseAttribute("AEGONPL", "/pl/Strona-glowna/Inwestycje/Notowania-funduszy/", "Strona główna;Inwestycje", null)]
        [NUnit.Framework.TestCaseAttribute("AEGONES", "/es/Inicio/Productos/Tus-ahorros-Inversiones/TU-AHORRO/", "Inicio;Productos;Tus Ahorros / Inversiones", null)]
        public virtual void CheckNon_BRIMicrodataTag(string site, string page, string breadcrumbs, string[] exampleTags)
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("Check non-BRI microdata tag", exampleTags);
#line 22
this.ScenarioSetup(scenarioInfo);
#line 23
 testRunner.Given(string.Format("I am on the {0} site", site), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line 24
    testRunner.When(string.Format("I go to the {0} page", page), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line 25
 testRunner.Then("The body microdata tag is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line 26
    testRunner.And(string.Format("The {0} non-BRI microdata tags are present", breadcrumbs), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
