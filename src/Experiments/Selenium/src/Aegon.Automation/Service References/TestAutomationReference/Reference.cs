//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Aegon.TestAutomationReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SandboxEnum", Namespace="http://schemas.datacontract.org/2004/07/Aegon.Public.Website.Business.Features.Te" +
        "stAutomation")]
    public enum SandboxEnum : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        BRI = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Facelift = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Corporate = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        TLB = 3,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="SandboxPageData", Namespace="http://schemas.datacontract.org/2004/07/Aegon.Public.Website.Business.Features.Te" +
        "stAutomation")]
    [System.SerializableAttribute()]
    public partial class SandboxPageData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string FriendlyURLField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid GuidField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int ParentIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StaticLinkURLField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string FriendlyURL {
            get {
                return this.FriendlyURLField;
            }
            set {
                if ((object.ReferenceEquals(this.FriendlyURLField, value) != true)) {
                    this.FriendlyURLField = value;
                    this.RaisePropertyChanged("FriendlyURL");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid Guid {
            get {
                return this.GuidField;
            }
            set {
                if ((this.GuidField.Equals(value) != true)) {
                    this.GuidField = value;
                    this.RaisePropertyChanged("Guid");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ParentID {
            get {
                return this.ParentIDField;
            }
            set {
                if ((this.ParentIDField.Equals(value) != true)) {
                    this.ParentIDField = value;
                    this.RaisePropertyChanged("ParentID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StaticLinkURL {
            get {
                return this.StaticLinkURLField;
            }
            set {
                if ((object.ReferenceEquals(this.StaticLinkURLField, value) != true)) {
                    this.StaticLinkURLField = value;
                    this.RaisePropertyChanged("StaticLinkURL");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="TestAutomationReference.ITestAutomation")]
    public interface ITestAutomation {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestAutomation/Ping", ReplyAction="http://tempuri.org/ITestAutomation/PingResponse")]
        bool Ping();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestAutomation/PrepareSandboxTestPage", ReplyAction="http://tempuri.org/ITestAutomation/PrepareSandboxTestPageResponse")]
        Aegon.TestAutomationReference.SandboxPageData PrepareSandboxTestPage(Aegon.TestAutomationReference.SandboxEnum sandbox, string pageKey, string pageType, System.Collections.Generic.Dictionary<string, string> properties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestAutomation/EditHomePageData", ReplyAction="http://tempuri.org/ITestAutomation/EditHomePageDataResponse")]
        Aegon.TestAutomationReference.SandboxPageData EditHomePageData(Aegon.TestAutomationReference.SandboxEnum sandbox, string pageKey, System.Collections.Generic.Dictionary<string, string> properties);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestAutomation/GetDescendantPages", ReplyAction="http://tempuri.org/ITestAutomation/GetDescendantPagesResponse")]
        Aegon.TestAutomationReference.SandboxPageData[] GetDescendantPages(string pageUrl, string[] pageTypes, string languageBranch);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ITestAutomation/GetPageTypeId", ReplyAction="http://tempuri.org/ITestAutomation/GetPageTypeIdResponse")]
        int GetPageTypeId(string pageUrl);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ITestAutomationChannel : Aegon.TestAutomationReference.ITestAutomation, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TestAutomationClient : System.ServiceModel.ClientBase<Aegon.TestAutomationReference.ITestAutomation>, Aegon.TestAutomationReference.ITestAutomation {
        
        public TestAutomationClient() {
        }
        
        public TestAutomationClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TestAutomationClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestAutomationClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TestAutomationClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool Ping() {
            return base.Channel.Ping();
        }
        
        public Aegon.TestAutomationReference.SandboxPageData PrepareSandboxTestPage(Aegon.TestAutomationReference.SandboxEnum sandbox, string pageKey, string pageType, System.Collections.Generic.Dictionary<string, string> properties) {
            return base.Channel.PrepareSandboxTestPage(sandbox, pageKey, pageType, properties);
        }
        
        public Aegon.TestAutomationReference.SandboxPageData EditHomePageData(Aegon.TestAutomationReference.SandboxEnum sandbox, string pageKey, System.Collections.Generic.Dictionary<string, string> properties) {
            return base.Channel.EditHomePageData(sandbox, pageKey, properties);
        }
        
        public Aegon.TestAutomationReference.SandboxPageData[] GetDescendantPages(string pageUrl, string[] pageTypes, string languageBranch) {
            return base.Channel.GetDescendantPages(pageUrl, pageTypes, languageBranch);
        }
        
        public int GetPageTypeId(string pageUrl) {
            return base.Channel.GetPageTypeId(pageUrl);
        }
    }
}
